declare
    声明 shell 变量。在第一种语法中可用来声明变量并设置变量的属性([rix]即为变量的属性），
    在第二种语法中可用来显示shell函数。若不加上任何参数，则会显示全部的shell变量与函数(与执行
    set指令的效果相同)。
    declare [+/-][rxi][变量名称＝设置值] 或 declare -f
    参数说明：
        +/- 　"-"可用来指定变量的属性，"+"则是取消变量所设的属性。
        -f 　仅显示函数。
        r 　将变量设置为只读。
        x 　指定的变量会成为环境变量，可供shell以外的程序来使用。
        i 　[设置值]可以是数值，字符串或运算式。

set
    set [+-abCdefhHklmnpPtuvx]
    参数说明：
        -a 　标示已修改的变量，以供输出至环境变量。
        -b 　使被中止的后台程序立刻回报执行状态。
        -C 　转向所产生的文件无法覆盖已存在的文件。
        -d 　Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。
        -e 　若指令传回值不等于0，则立即退出shell。
        -f　 　取消使用通配符。
        -h 　自动记录函数的所在位置。
        -H Shell 　可利用"!"加<指令编号>的方式来执行history中记录的指令。
        -k 　指令所给的参数都会被视为此指令的环境变量。
        -l 　记录for循环的变量名称。
        -m 　使用监视模式。
        -n 　只读取指令，而不实际执行。
        -p 　启动优先顺序模式。
        -P 　启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。
        -t 　执行完随后的指令，即退出shell。
        -u 　当执行时使用到未定义过的变量，则显示错误信息。
        -v 　显示shell所读取的输入值。
        -x 　执行指令后，会先显示该指令及所下的参数。
        +<参数> 　取消某个set曾启动的参数
unset
    删除变量或函数
    unset [-fv][变量或函数名称]
    参数：
        -f 　仅删除函数。
        -v 　仅删除变量。
export
