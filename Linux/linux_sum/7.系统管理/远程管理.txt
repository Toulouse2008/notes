screen
    多重视窗管理程序
    screen [-AmRvx -ls -wipe][-d <作业名称>][-h <行数>][-r <作业名称>][-s <shell>]
    [-S <作业名称>]
    参数说明：
        -A 　将所有的视窗都调整为目前终端机的大小。
        -d<作业名称> 　将指定的screen作业离线。
        -h<行数> 　指定视窗的缓冲区行数。
        -m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。
        -r<作业名称> 　恢复离线的screen作业。
        -R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。
        -s<shell> 　指定建立新视窗时，所要执行的shell。
        -S<作业名称> 　指定screen作业的名称。
        -v 　显示版本信息。
        -x 　恢复之前离线的screen作业。
        -ls或--list 　显示目前所有的screen作业。
        -wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。
    创建 screen 终端
        # screen //创建 screen 终端
    创建 screen 终端 并执行任务
        # screen vi ~/main.c //创建 screen 终端 ，并执行 vi命令
    离开 screen 终端
        # screen vi ~/main.c //创建 screen 终端 ，并执行 vi命令
        #include
        main ()
        {
        }
        在 screen 终端 下 按下 Ctrl+a d键
    重新连接离开的 screen 终端
    # screen -ls  //显示已创建的screen终端
        There are screens on:
        2433.pts-3.linux    (2013年10月20日 16时48分59秒)    (Detached)
        2428.pts-3.linux    (2013年10月20日 16时48分05秒)    (Detached)
        2284.pts-3.linux    (2013年10月20日 16时14分55秒)    (Detached)
        2276.pts-3.linux    (2013年10月20日 16时13分18秒)    (Detached)
        4 Sockets in /var/run/screen/S-root.
    # screen -r 2276 //连接 screen_id 为 2276 的 screen终端



rlogin
    远端登入
    rlogin [-8EL][-e <脱离字符>][-l <用户名称>][主机名称或IP地址]
    必要参数：
        -E 忽略escape字符
        -8 只识别8位字的字符
        -L 允许rlogin会话运行在litout模式
        -ec 设置escape字符为c
        -c 断开连接前要求确认
        -a 强制要求远程主机在发送完一个空的本地用户名之后请求一个密码
        -f 向远端主机发送一个本地认证
        -F 向远程主机发送一个可转寄的本地认证
        -7 强制执行7为的传输
        -d 打开用于远端主机通信的TCP套接口的调试
        -k 要求包含远端主机的tisckets
        -x 启动数据传输的DES加密
        -4 只使用 kerkberos的版本4的认证
    选择参数：
        -e<字符> 设置退出字符
        -l<用户> 指定登陆的用户
        -t<终端类型> 设置终端类型

rsh
    远端登入的Shell
    rsh [-dn][-l <用户名称>][主机名称或IP地址][执行指令]
    参数说明：
        -d 　使用Socket层级的排错功能。
        -l<用户名称> 　指定要登入远端主机的用户名称。
        -n 　把输入的指令号向代号为/dev/null的特殊外围设备。
    开启rsh服务
    # chkconfig --list //检测rlogin服务是否开启
    # chkconfig rsh on //开启rsh服务
    # chkconfig -list //检测开启的服务
    远程命令执行
    # rsh -l hnlinux 192.168.1.88 /bin/ls //远程执行ls命令
