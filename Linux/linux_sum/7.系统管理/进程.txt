top
    实时显示 process 的动态
    top [-] [d delay] [q] [c] [S] [s] [i] [n] [b]
    参数说明：
        d : 改变显示的更新速度，或是在交谈式指令列( interactive command)按 s
        q : 没有任何延迟的显示速度，如果使用者是有 superuser 的权限，则 top 将会以最高的优
            先序执行
        c : 切换显示模式，共有两种模式，一是只显示执行档的名称，另一种是显示完整的路径与
            名称S:累积模式，会将己完成或消失的子行程(dead child process)的CPU time累积起来
        s : 安全模式，将交谈式指令取消, 避免潜在的危机
        i : 不显示任何闲置 (idle) 或无用 (zombie) 的行程
        n : 更新的次数，完成后将会退出 top
        b : 批次档模式，搭配 "n" 参数一起使用，可以用来将 top 的结果输出到档案内
ps
    显示当前进程 (process) 的状态
    ps [options] [--help]
    参数：
        ps 的参数非常多, 在此仅列出几个常用的参数并大略介绍含义
        -A 列出所有的行程
        -w 显示加宽可以显示较多的资讯
        -au 显示较详细的资讯
        -aux 显示所有包含其他使用者的行程
        au(x) 输出格式 :
        USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
        USER: 行程拥有者
        PID: pid
        %CPU: 占用的 CPU 使用率
        %MEM: 占用的记忆体使用率
        VSZ: 占用的虚拟记忆体大小
        RSS: 占用的记忆体大小
        TTY: 终端的次要装置号码 (minor device number of tty)
        STAT: 该行程的状态:
        D: 不可中断的静止 (通悸□□缜b进行 I/O 动作)
        R: 正在执行中
        S: 静止状态
        T: 暂停执行
        Z: 不存在但暂时无法消除
        W: 没有足够的记忆体分页可分配
        <: 高优先序的行程
        N: 低优先序的行程
        L: 有记忆体分页分配并锁在记忆体内 (实时系统或捱A I/O)
        START: 行程开始时间
        TIME: 执行的时间
        COMMAND:所执行的指令

pstree命
    将所有行程以树状图显示，树状图将会以 pid (如果有指定) 或是以 init 这个基本行程为根 (root)，
    如果有指定使用者 id，则树状图会只显示该使用者所拥有的行程
    pstree [-a] [-c] [-h|-Hpid] [-l] [-n] [-p] [-u] [-G|-U] [pid|user]
    参数说明：
        -a 显示该行程的完整指令及参数, 如果是被记忆体置换出去的行程则会加上括号
        -c 如果有重覆的行程名, 则分开列出（预设值是会在前面加上 *）
    特别表明在运行的进程
    # pstree -apnh //显示进程间的关系
    同时显示用户名称
    # pstree -u //显示用户名称




kill
    将指定的信息送至程序。预设的信息为SIGTERM(15)，可将指定程序终止。若仍无法终止该程序，可使
    用SIGKILL(9)信息尝试强制删除程序。程序或工作的编号可利用ps指令或jobs指令查看
    kill [-s <信息名称或编号>][程序]　或　kill [-l <信息编号>]
    参数说明：
        -l <信息编号> 　若不加<信息编号>选项，则-l参数会列出全部的信息名称。
        -s <信息名称或编号> 　指定要送出的信息。
        [程序] 　[程序]可以是程序的PID或是PGID，也可以是工作编号。
    杀死进程
        # kill 12345
        强制杀死进程
        # kill -KILL 123456
        发送SIGHUP信号，可以使用一下信号
        # kill -HUP pid
        彻底杀死进程
        # kill -9 123456
        杀死指定用户所有进程
        #kill -9 $(ps -ef | grep hnlinux) //方法一 过滤出hnlinux用户进程
        #kill -u hnlinux //方法二
