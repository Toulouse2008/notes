Hibernate History
Started in 2001 by Gavin King with colleagues from Cirrus Technologies as an
    alternative to using EJB2-style entity beans. The original goal was to offer
    better persistence capabilities than those offered by EJB2; by simplifying
    the complexities and supplementing certain missing features.

In early 2003, the Hibernate development team began Hibernate2 releases, which
    offered many significant improvements over the first release.

    JBoss, Inc. (now part of Red Hat) later hired the lead Hibernate developers
    in order to further its development.

In 2005, Hibernate version 3.0 was released. Key features included a new
    Interceptor/Callback architecture, user defined filters, and JDK 5.0
    Annotations (Java's metadata feature). As of 2010, Hibernate 3 (version 3.5.0
    and up) was a certified implementation of the Java Persistence API 2.0
    specification via a wrapper for the Core module which provides conformity
    with the JSR 317 standard.[3]

In Dec 2011, Hibernate Core 4.0.0 Final was released. This includes new features
    such as multi-tenancy support, introduction of ServiceRegistry (a major change
    in how Hibernate builds and manages "services"), better session opening from
    SessionFactory, improved integration via org.hibernate.integrator.spi.Integrator
    and auto discovery, internationalization support, message codes in logging,
    and a more distinction between the API, SPI or implementation classes.[4]

In Dec 2012, Hibernate ORM 4.1.9 Final was released.[5]

In Mar 2013, Hibernate ORM 4.2 Final was released.[6]

In Dec 2013, Hibernate ORM 4.3.0 Final was released.[7] It features Java
    Persistence API 2.1.[8]

In Sep 2015, Hibernate ORM 5.0.2 Final was released. It has improved bootstrapping,
    hibernate-java8, hibernate-spatial, Karaf support.
